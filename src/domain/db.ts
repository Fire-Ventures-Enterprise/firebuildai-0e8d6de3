export type UUID = string;

export type ThemePref = 'system' | 'light' | 'dark';
export type PoStatus = 'draft' | 'submitted' | 'approved' | 'closed';
export type PaymentStatus = 'pending' | 'partial' | 'paid' | 'cancelled';
export type PaymentMethod = 'card' | 'bank_transfer' | 'check' | 'cash' | 'other';
export type ChatRole = 'member' | 'manager';

export interface Profile {
  id: UUID;                 // auth.uid()
  company_id: UUID | null;
  theme?: ThemePref;
}

export interface Job {
  id: UUID;
  company_id: UUID;
  name: string | null;
  title?: string | null;
  status?: string | null;
}

export interface Vendor {
  id: UUID;
  company_id: UUID;
  name: string;
  contact_name?: string | null;
  email?: string | null;
  phone?: string | null;
  address?: string | null;
  payment_terms?: string | null;
  default_tax_rate?: number | null; // %
  notes?: string | null;
  created_by: UUID;
  created_at: string;
  updated_at: string;
}

export interface PoSettings {
  company_id: UUID;
  prefix: string;
  pad_len: number;
}

export interface PurchaseOrder {
  id: UUID;
  company_id: UUID;
  job_id: UUID;
  vendor_id: UUID;
  po_number: string | null;        // generated by trigger
  status: PoStatus;
  payment_status: PaymentStatus;
  payment_method: PaymentMethod | null;
  terms: string | null;
  due_date: string | null;         // date
  expected_delivery: string | null;// date
  subtotal: number;
  tax: number;
  total: number;
  notes: string | null;
  created_by: UUID;
  created_at: string;
  updated_at: string;
}

export interface PurchaseOrderItem {
  id: UUID;
  po_id: UUID;
  description: string;
  qty: number;            // numeric
  unit_price: number;     // numeric
  tax_rate: number | null;// %
  line_total: number;
}

export interface PoPayment {
  id: UUID;
  po_id: UUID;
  amount: number;
  method: PaymentMethod | null;
  paid_at: string;
  reference: string | null;
}

export interface JobChat {
  id: UUID;
  job_id: UUID;
  company_id: UUID;
  created_by: UUID;
  created_at: string;
}

export interface JobChatMember {
  chat_id: UUID;
  user_id: UUID;
  role: ChatRole;
  added_at: string;
}

export interface JobChatMessage {
  id: UUID;
  chat_id: UUID;
  user_id: UUID;
  body: string;
  attachments: Array<{ name: string; url: string; size?: number }> | null;
  created_at: string;
}

// Convenience shape
export interface PurchaseOrderWithJoins extends PurchaseOrder {
  vendor?: Pick<Vendor, 'id'|'name'|'email'|'phone'> | null;
  job?: Pick<Job, 'id'|'name'|'title'> | null;
  items?: PurchaseOrderItem[];
  payments?: PoPayment[];
}